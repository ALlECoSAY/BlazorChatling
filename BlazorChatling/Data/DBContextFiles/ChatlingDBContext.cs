// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace BlazorChatling.Data.DBContextFiles
{
    public partial class ChatlingDBContext : DbContext
    {
        public ChatlingDBContext()
        {
        }

        public ChatlingDBContext(DbContextOptions<ChatlingDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ChatUser> ChatUser { get; set; }
        public virtual DbSet<Chats> Chats { get; set; }
        public virtual DbSet<Messages> Messages { get; set; }
        public virtual DbSet<Users> Users { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ChatUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Chat_User");

                entity.Property(e => e.IdChat).HasColumnName("id_chat");

                entity.Property(e => e.IdUser).HasColumnName("id_user");

                entity.HasOne(d => d.IdChatNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.IdChat)
                    .HasConstraintName("FK__Chat_User__id_ch__3A81B327");

                entity.HasOne(d => d.IdUserNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.IdUser)
                    .HasConstraintName("FK__Chat_User__id_us__398D8EEE");
            });

            modelBuilder.Entity<Chats>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("name");
            });

            modelBuilder.Entity<Messages>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.IdChat).HasColumnName("id_chat");

                entity.Property(e => e.IdReplyMessage).HasColumnName("id_reply_message");

                entity.Property(e => e.IdReplyUser).HasColumnName("id_reply_user");

                entity.Property(e => e.IdUser).HasColumnName("id_user");

                entity.Property(e => e.IsEdited)
                    .IsRequired()
                    .HasColumnName("is_edited")
                    .HasDefaultValueSql("('FALSE')");

                entity.Property(e => e.IsReplyVisibleToGroup)
                    .IsRequired()
                    .HasColumnName("is_reply_visible_to_group")
                    .HasDefaultValueSql("('TRUE')");

                entity.Property(e => e.IsVisibleToCreator)
                    .IsRequired()
                    .HasColumnName("is_visible_to_creator")
                    .HasDefaultValueSql("('TRUE')");

                entity.Property(e => e.MsgText)
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("msg_text");

                entity.Property(e => e.MsgTime)
                    .HasColumnType("datetime")
                    .HasColumnName("msg_time")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.IdChatNavigation)
                    .WithMany(p => p.Messages)
                    .HasForeignKey(d => d.IdChat)
                    .HasConstraintName("FK__Messages__id_cha__5812160E");

                entity.HasOne(d => d.IdReplyMessageNavigation)
                    .WithMany(p => p.InverseIdReplyMessageNavigation)
                    .HasForeignKey(d => d.IdReplyMessage)
                    .HasConstraintName("FK__Messages__id_rep__571DF1D5");

                entity.HasOne(d => d.IdUserNavigation)
                    .WithMany(p => p.Messages)
                    .HasForeignKey(d => d.IdUser)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Messages__id_use__5629CD9C");
            });

            modelBuilder.Entity<Users>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Tag)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("tag");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}