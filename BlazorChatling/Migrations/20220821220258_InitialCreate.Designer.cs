// <auto-generated />
using System;
using BlazorChatling.Data.DBContextFiles;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorChatling.Migrations
{
    [DbContext(typeof(ChatlingDBContext))]
    [Migration("20220821220258_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BlazorChatling.Data.DBContextFiles.Chats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("BlazorChatling.Data.DBContextFiles.ChatUser", b =>
                {
                    b.Property<int>("IdChat")
                        .HasColumnType("int")
                        .HasColumnName("id_chat");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasIndex("IdChat");

                    b.HasIndex("IdUser");

                    b.ToTable("Chat_User", (string)null);
                });

            modelBuilder.Entity("BlazorChatling.Data.DBContextFiles.Messages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdChat")
                        .HasColumnType("int")
                        .HasColumnName("id_chat");

                    b.Property<int?>("IdReplyMessage")
                        .HasColumnType("int")
                        .HasColumnName("id_reply_message");

                    b.Property<int?>("IdReplyUser")
                        .HasColumnType("int")
                        .HasColumnName("id_reply_user");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<bool?>("IsEdited")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_edited")
                        .HasDefaultValueSql("('FALSE')");

                    b.Property<bool?>("IsReplyVisibleToGroup")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_reply_visible_to_group")
                        .HasDefaultValueSql("('TRUE')");

                    b.Property<bool?>("IsVisibleToCreator")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_visible_to_creator")
                        .HasDefaultValueSql("('TRUE')");

                    b.Property<string>("MsgText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("msg_text");

                    b.Property<DateTime?>("MsgTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("msg_time")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("IdChat");

                    b.HasIndex("IdReplyMessage");

                    b.HasIndex("IdUser");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("BlazorChatling.Data.DBContextFiles.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tag");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlazorChatling.Data.DBContextFiles.ChatUser", b =>
                {
                    b.HasOne("BlazorChatling.Data.DBContextFiles.Chats", "IdChatNavigation")
                        .WithMany()
                        .HasForeignKey("IdChat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Chat_User__id_ch__3A81B327");

                    b.HasOne("BlazorChatling.Data.DBContextFiles.Users", "IdUserNavigation")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Chat_User__id_us__398D8EEE");

                    b.Navigation("IdChatNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("BlazorChatling.Data.DBContextFiles.Messages", b =>
                {
                    b.HasOne("BlazorChatling.Data.DBContextFiles.Chats", "IdChatNavigation")
                        .WithMany("Messages")
                        .HasForeignKey("IdChat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Messages__id_cha__5812160E");

                    b.HasOne("BlazorChatling.Data.DBContextFiles.Messages", "IdReplyMessageNavigation")
                        .WithMany("InverseIdReplyMessageNavigation")
                        .HasForeignKey("IdReplyMessage")
                        .HasConstraintName("FK__Messages__id_rep__571DF1D5");

                    b.HasOne("BlazorChatling.Data.DBContextFiles.Users", "IdUserNavigation")
                        .WithMany("Messages")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK__Messages__id_use__5629CD9C");

                    b.Navigation("IdChatNavigation");

                    b.Navigation("IdReplyMessageNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("BlazorChatling.Data.DBContextFiles.Chats", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("BlazorChatling.Data.DBContextFiles.Messages", b =>
                {
                    b.Navigation("InverseIdReplyMessageNavigation");
                });

            modelBuilder.Entity("BlazorChatling.Data.DBContextFiles.Users", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
