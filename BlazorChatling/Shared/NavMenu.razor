@using BlazorChatling.Data
@using BlazorChatling.Data.DBContextFiles

@inject ChatsDAOService ChatsDAOService
@inject UserInfoGlobalClass UserInfoGlobalClass

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">@authenticationState.User.Identity.Name</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="authInfo">
                <span class="oi oi-list-rich" aria-hidden="true"></span> AuthInfo
            </NavLink>
        </div>
        @foreach (Chats chat in chats) {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href=@{$"chat/{chat.Id}"} >
                    
                    <span class="oi oi-list-rich" aria-hidden="true"></span> @chat.Name
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    [CascadingParameter] protected Task<AuthenticationState> authenticationStateTask { get; set; }

    private AuthenticationState authenticationState;
    private List<Chats> chats = new List<Chats>();

    protected async override Task OnInitializedAsync() {
        authenticationState = await authenticationStateTask;

        if (UserInfoGlobalClass.user!= null) chats = await ChatsDAOService.getChatsByUser(UserInfoGlobalClass.user.Id);


    }



    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
